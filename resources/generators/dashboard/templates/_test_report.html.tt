<html>
<head>
  <meta charset="UTF-8"/>
  <link data-require="bootstrap-css@*" data-semver="3.0.0" href="http://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet"/>
  <link href="../assets/pygments/<%= options[:code_style] %>.css" rel="stylesheet" type="text/css">
  <link href="../assets/style.css" rel="stylesheet" type="text/css">
  <link href="../assets/angular/json-formatter.min.css" rel="stylesheet" type="text/css">
  <script data-require="angular.js@*" data-semver="1.2.27" src="../assets/angular/angular.min.js"></script>
  <script src="../assets/angular/ui-bootstrap-tpls.min.js"></script>
  <script src="../assets/angular/json-formatter.min.js"></script>
  <script>
  angular.module('details', ['jsonFormatter', 'ui.bootstrap']);
  </script>
  </head>
  <body ng-app="details">
    <div class="panel panel-<%= bootstrap_color(@challenge.status_color) %>">
      <div class="panel-heading">
        <div class="panel-title">
          <strong>
            <%= @challenge.slug %>
            <span class="label pull-right label-<%= bootstrap_color(@challenge.status_color) %>"><%= @challenge.status_description%></span>
          </strong>
        </div>
      </div>
      <div class="panel-body">
        <ul class="list-group">
          <li class="list-group-item"><%= status('Test suite:', @challenge.suite) %></li>
          <li class="list-group-item"><%= status('Test scenario:', @challenge.name) %></li>
          <li class="list-group-item"><%= status('Implementor:', @challenge.implementor.name) %></li>
          <li class="list-group-item"><%= status('Duration:', Polytrix::Util.duration(@challenge.duration)) %></li>
          <li class="list-group-item">
            <strong class="list-group-item-heading">Test Input</strong>
            <% source_file = @challenge.absolute_source_file ? relativize(@challenge.absolute_source_file, Dir.pwd) : '<No code sample>' %>
            <ul class="list-group-item">
              <strong class="list-group-item-heading">Code sample</strong>
              <p class="list-group-item-text">
                <% if @challenge.absolute_source_file %>
<%= @challenge.highlighted_code('html') %>
                <% end %>
              </p>
            </ul>
            <ul class="list-group-item">
              <strong class="list-group-item-heading">Test parameters</strong>
              <tabset>
                <tab heading="Tree">
                  <json-formatter json='<%= as_json(@challenge.vars) %>' open="5"></json-formatter>
                </tab>
                <tab heading="Raw">
                  <pre class="list-group-item-text console">
                    <code>
<%= highlight(@challenge.vars.to_hash.to_yaml, language: 'yaml', formatter: 'html') %>
                    </code>
                  </pre>
                </tab>
              </tabset>
            </ul>
          </li>
          <% if @challenge.result %>
          <li class="list-group-item">
            <strong class="list-group-item-heading">Execution Results</strong>
            <ul class="list-group">`
              <li class="list-group-item">
                <strong class="list-group-item-heading">Validation Results</strong>
                <ul class="list-group">
                  <% @challenge.result.validations.each do |description, result| %>
                  <li class="list-group-item <%= result.result %>">
                    <strong class="list-group-item-heading"><%= description %></strong>
                    <% if result.error %>
                    <div class="list-group-item">
                      <strong class="list-group-item-heading">Error Message</strong>
                      <pre class="list-group-item-text console">
<%= ansi2html(h result.error.to_s) %>
                      </pre>
                    </div>
                    <div class="list-group-item">
                      <strong class="list-group-item-heading">Validator Source</strong>
                      <div class="list-group-item-text">
<%= highlight(result.error_source, language: 'ruby', formatter: 'html') %>
                      </div>
                    </div>
                    <% end %>
                  </li>
                  <% end %>
                </ul>
              </li>
              <li class="list-group-item">
                <strong class="list-group-item-heading">STDOUT</strong>
                <pre class="list-group-item-text console">
                <% if @challenge.result %>
                  <code>
<%= ansi2html(@challenge.result.execution_result.stdout) %>
                  </code>
                <% end %>
                </pre>
              </li>
              <li class="list-group-item">
                <strong class="list-group-item-heading">STDERR</strong>
                <pre class="list-group-item-text console">
                <% if @challenge.result %>
                  <code>
<%= ansi2html(@challenge.result.execution_result.stderr) %>
                  </code>
                <% end %>
                </p>
              </li>
              <% if @challenge.error %>
              <li class="list-group-item">
                <strong class="list-group-item-heading">Framework Errors</strong>
                <pre class="list-group-item-text console">

                  <code>
<%#= ansi2html(@challenge.error) # I don't think there's any ANSI colors %>
<%= @challenge.error %>
                  </code>
                </pre>
              </li>
              <% end %>
              <% if @challenge.spy_data %>
              <li class="list-group-item">
                <strong class="list-group-item-heading">Spy data</strong>
                <tabset>
                  <tab heading="Tree">
                    <json-formatter json='<%= as_json(@challenge.spy_data) %>' open="5"></json-formatter>
                  </tab>
                  <tab heading="Raw">
                    <pre class="list-group-item-text console">
                      <code>
<%= highlight(@challenge.spy_data.to_hash.to_yaml, language: 'yaml', formatter: 'html') %>
                      </code>
                    </pre>
                  </tab>
                </tabset>
              </li>
              <% end %>
            </ul>
          </li>
          <% end %>
        </ul>
      </div>
    </div>
  </body>
</html>
